name: "Release"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:  
      version:
        description: 'Version to release'
        required: true
        type: string

jobs:
  build:
    name: Build, test and package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release ./src/Costasdev.SafeSvg/Costasdev.SafeSvg.csproj

      - name: Run tests
        run: dotnet test --configuration Release

      - name: Package NuGet
        run: |
          VERSION=${{ inputs.version || github.ref_name }}
          dotnet pack src/Costasdev.SafeSvg/Costasdev.SafeSvg.csproj \
            --configuration Release \
            --output ./packages \
            -p:PackageVersion=$VERSION \
            --no-build

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./packages/*.{nupkg,snupkg}

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Download NuGet package
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ./packages

      - name: Publish package to NuGet
        run: |
          VERSION=${{ inputs.version || github.ref_name }}
          dotnet nuget push ./packages/*.nupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }}

      - name: Publish symbols to NuGet
        run: |
          VERSION=${{ inputs.version || github.ref_name }}
          dotnet nuget push ./packages/*.snupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: packages/*.{nupkg,snupkg}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Release notes for version ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}